#!/usr/bin/env ruby
require "fileutils"

APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "🚀 Starting development environment setup for マチダのブログ"
  puts "=" * 60

  # Check Ruby version
  puts "\n== Checking Ruby version =="
  ruby_version = `ruby --version`.strip
  puts "Current Ruby version: #{ruby_version}"
  
  # Check if required Ruby version file exists
  if File.exist?(".ruby-version")
    required_version = File.read(".ruby-version").strip
    puts "Required Ruby version: #{required_version}"
    
    unless ruby_version.include?(required_version)
      puts "⚠️  Warning: Ruby version mismatch!"
      puts "   Run: rbenv install #{required_version} && rbenv local #{required_version}"
    end
  end

  puts "\n== Installing dependencies =="
  system("bundle check") || system!("bundle install")

  # Check if Node.js is installed
  if system("which node > /dev/null 2>&1")
    puts "\n== Installing Node.js dependencies =="
    system("npm install") || system!("npm install")
    
    puts "\n== Installing Playwright browsers =="
    system("npx playwright install") || system!("npx playwright install")
  else
    puts "\n== Warning: Node.js not found. Skipping npm and Playwright setup =="
    puts "   Install Node.js if you plan to run E2E tests with Playwright"
  end

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Running database migrations =="
  system! "bin/rails db:migrate"

  puts "\n== Running database seeds =="
  system! "bin/rails db:seed"

  puts "\n== Precompiling assets =="
  system! "bin/rails assets:precompile"

  puts "\n== Running tests to verify setup =="
  puts "Running a quick smoke test..."
  if system("bin/rails test:models --verbose", out: File::NULL, err: File::NULL)
    puts "✅ Model tests passed"
  else
    puts "⚠️  Some model tests failed - check later"
  end

  puts "\n" + "=" * 60
  puts "🎉 Setup completed successfully!"
  puts "=" * 60
  
  puts "\n📋 Next steps:"
  puts "   • Run 'bin/dev' to start the development server"
  puts "   • Visit http://localhost:3000 to see your app"
  puts "   • Run 'bin/rails test:all' to run all tests"
  puts "   • Run 'bundle exec rails test test/system/' to run Playwright E2E tests"
  
  puts "\n🔧 Available commands:"
  puts "   • bin/dev                    - Start development server"
  puts "   • bin/rails test:all         - Run all tests"
  puts "   • bin/rails test:system      - Run system tests"
  puts "   • bin/lint                   - Run linters (if available)"
  puts "   • bin/rails db:seed          - Seed database"
  puts "   • bin/rails db:migrate       - Run migrations"

  unless ARGV.include?("--skip-server")
    puts "\n== Starting development server =="
    puts "Press Ctrl+C to stop the server"
    STDOUT.flush # flush the output before exec(2) so that it displays
    exec "bin/dev"
  end
end
